syntax = "proto3";

package raftRpcSpace;

option cc_generic_services = true;

// 日志实体
message LogEntry {
    bytes Command = 1;
    int32 LogTerm = 2;
    int32 LogIndex = 3;
}

// 追加日志请求
message AppendEntriesArguments { 
    int32 Term = 1; // leader的任期
    int32 LeaderId = 2; // leader的id
    int32 PrevLogIndex = 3; // 上一个日志的索引
    int32 PrevLogTerm = 4; // 上一个日志的任期
    repeated LogEntry Entries = 5; // 日志条目
    int32 LeaderCommit = 6; // leader已提交的日志索引
}

message AppendEntriesResults {
    int32 Term = 1; // 当前任期
    bool Success = 2; // 是否成功
    int32 UpdateNextIndex = 3; // 更新的下一个索引
    int32 AppState = 4; // 当前节点的网络状态
}

message RequestVoteArguments {
    int32 Term = 1; // 当前任期
    int32 CandidateId = 2; // 候选者的id
    int32 LastLogIndex = 3; // 最后一个日志的索引
    int32 LastLogTerm = 4; // 最后一个日志的任期
}

message RequestVoteResults {
    int32 Term = 1; // 当前任期
    bool VoteGranted = 2; // 是否投票
    int32 VoteState = 3; 
}

message InstallSnapshotArguments {
    int32 Term = 1; // 当前任期
    int32 LeaderId = 2; // leader的id
    int32 LastIncludedIndex = 3; // 快照的最后一个索引
    int32 LastIncludedTerm = 4; // 快照的最后一个任期
    bytes Data = 5; // 快照数据
}

message InstallSnapshotResults {
    int32 Term = 1; // 当前任期
}

service raftRpc {
    rpc AppendEntries(AppendEntriesArguments) returns (AppendEntriesResults);
    rpc RequestVote(RequestVoteArguments) returns (RequestVoteResults);
    rpc InstallSnapshot(InstallSnapshotArguments) returns (InstallSnapshotResults);
}